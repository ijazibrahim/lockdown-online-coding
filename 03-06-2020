//1.Write a code segment in java to swap two numbers using call by object reference.
import java.util.Scanner;
import java.util.*;
public class Swapping 
{
    public static void main(String[] args) 
    {
		    Scanner sc=new Scanner(System.in);
		    System.out.println("Enter first number:");
		    int a =sc.nextInt();
		    System.out.println("Enter second number:");
		    int b =sc.nextInt();
		    System.out.println("Before swapping, a = " + a + " and b = " + b);
		    swapFunction(a, b);
		      
	}
	public static void swapFunction(int a, int b)
	{
		     
		  int c = a;
		  a = b;
		  b = c;
		  System.out.println("After swapping(Inside), a = " + a + " b = " + b);
	}
		
}

//2.Write a Java program to find Last Digit of a^b (a to the power b) for Large Numbers.
import java.io.*; 
import java.math.*; 
  
class Lastdigit { 
  
    
    static int Modulo(int a, char b[]) 
    { 
        
        int mod = 0; 
  
         
       
        for (int i = 0; i < b.length; i++) 
            mod = (mod * 10 + b[i] - '0') % a; 
  
        return mod;
    } 
  
    
    static int LastDigit(char a[], char b[]) 
    { 
        int len_a = a.length, len_b = b.length; 
  
         
        if (len_a == 1 && len_b == 1 && b[0] == '0' && a[0] == '0') 
            return 1; 
  
         
        if (len_b == 1 && b[0] == '0') 
            return 1; 
  
        
        if (len_a == 1 && a[0] == '0') 
            return 0; 
  
        
        
         
       
        int exp = (Modulo(4, b) == 0) ? 4 : Modulo(4, b); 
  
         
        int res = (int)(Math.pow(a[len_a - 1] - '0', exp)); 
  
         
        return res % 10; 
    } 
  
    
    public static void main(String args[]) throws IOException 
    { 
        char a[] = "117".toCharArray(), b[] = { '3' }; 
        System.out.println(LastDigit(a, b)); 
    } 
}
